[{"C:\\Users\\sergio-pieza\\Desktop\\node\\jobsity-calendar\\src\\index.js":"1","C:\\Users\\sergio-pieza\\Desktop\\node\\jobsity-calendar\\src\\App.js":"2","C:\\Users\\sergio-pieza\\Desktop\\node\\jobsity-calendar\\src\\reportWebVitals.js":"3","C:\\Users\\sergio-pieza\\Desktop\\node\\jobsity-calendar\\src\\components\\calendar\\index.js":"4","C:\\Users\\sergio-pieza\\Desktop\\node\\jobsity-calendar\\src\\components\\calendar\\Style.js":"5","C:\\Users\\sergio-pieza\\Desktop\\node\\jobsity-calendar\\src\\components\\day\\index.js":"6","C:\\Users\\sergio-pieza\\Desktop\\node\\jobsity-calendar\\src\\components\\week\\index.js":"7","C:\\Users\\sergio-pieza\\Desktop\\node\\jobsity-calendar\\src\\components\\tasklist\\index.js":"8","C:\\Users\\sergio-pieza\\Desktop\\node\\jobsity-calendar\\src\\components\\task\\index.js":"9","C:\\Users\\sergio-pieza\\Desktop\\node\\jobsity-calendar\\src\\appContext.js":"10","C:\\Users\\sergio-pieza\\Desktop\\node\\jobsity-calendar\\src\\components\\newTask\\index.js":"11","C:\\Users\\sergio-pieza\\Desktop\\node\\jobsity-calendar\\src\\components\\editTask\\index.js":"12","C:\\Users\\sergio-pieza\\Desktop\\node\\jobsity-calendar\\src\\helpers\\formValidation.js":"13"},{"size":500,"mtime":1608915752813,"results":"14","hashOfConfig":"15"},{"size":765,"mtime":1609302424417,"results":"16","hashOfConfig":"15"},{"size":362,"mtime":1608915752813,"results":"17","hashOfConfig":"15"},{"size":1930,"mtime":1609325922999,"results":"18","hashOfConfig":"15"},{"size":180,"mtime":1609022767189,"results":"19","hashOfConfig":"15"},{"size":1966,"mtime":1609372965369,"results":"20","hashOfConfig":"15"},{"size":1018,"mtime":1609105689174,"results":"21","hashOfConfig":"15"},{"size":992,"mtime":1609325864975,"results":"22","hashOfConfig":"15"},{"size":2194,"mtime":1609365505627,"results":"23","hashOfConfig":"15"},{"size":487,"mtime":1609117323647,"results":"24","hashOfConfig":"15"},{"size":7440,"mtime":1609372989503,"results":"25","hashOfConfig":"15"},{"size":8562,"mtime":1609373023717,"results":"26","hashOfConfig":"15"},{"size":934,"mtime":1609372398882,"results":"27","hashOfConfig":"15"},{"filePath":"28","messages":"29","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},"16bp46w",{"filePath":"31","messages":"32","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"33","messages":"34","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"35","messages":"36","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"37","usedDeprecatedRules":"30"},{"filePath":"38","messages":"39","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"40","usedDeprecatedRules":"41"},{"filePath":"42","messages":"43","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"44","messages":"45","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"46","messages":"47","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"48","usedDeprecatedRules":"30"},{"filePath":"49","messages":"50","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"51","usedDeprecatedRules":"30"},{"filePath":"52","messages":"53","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"54","messages":"55","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"56","messages":"57","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"58","messages":"59","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"C:\\Users\\sergio-pieza\\Desktop\\node\\jobsity-calendar\\src\\index.js",[],["60","61"],"C:\\Users\\sergio-pieza\\Desktop\\node\\jobsity-calendar\\src\\App.js",[],"C:\\Users\\sergio-pieza\\Desktop\\node\\jobsity-calendar\\src\\reportWebVitals.js",[],"C:\\Users\\sergio-pieza\\Desktop\\node\\jobsity-calendar\\src\\components\\calendar\\index.js",["62"],"import React, {  useEffect, useContext } from 'react';\r\n\r\nimport './calendar.css';\r\nimport Week from '../week';\r\nimport { AppContext } from '../../appContext';\r\n\r\nfunction Calendar() {\r\n  const { selectedDay, setSelectedDay, month, setMonth } = useContext(\r\n    AppContext\r\n  );\r\n  let monthTitle = month.format('MMMM YYYY');\r\n\r\n  useEffect(() => {\r\n    monthTitle = month.format('MMMM YYYY');\r\n  }, [month, selectedDay]);\r\n\r\n  const selectDay = (day) => {\r\n    setSelectedDay(day.date);\r\n    setMonth(day.date.clone());\r\n  };\r\n\r\n  const renderWeeks = () => {\r\n    let weeks = [];\r\n    let done = false;\r\n    let date = month\r\n      .clone()\r\n      .startOf('month')\r\n      .add('w' - 1)\r\n      .day('Sunday');\r\n    let count = 0;\r\n    let monthIndex = date.month();\r\n\r\n    while (!done) {\r\n      weeks.push(\r\n        <Week\r\n          key={date}\r\n          date={date.clone()}\r\n          month={month}\r\n          select={(day) => selectDay(day)}\r\n          selectedDay={selectedDay}\r\n        />\r\n      );\r\n\r\n      date.add(1, 'w');\r\n\r\n      done = count++ > 2 && monthIndex !== date.month();\r\n      monthIndex = date.month();\r\n    }\r\n\r\n    return weeks;\r\n  };\r\n\r\n  const DayNames = () => {\r\n    return (\r\n      <div className=\"row day-names\">\r\n        <span className=\"day\">Sun</span>\r\n        <span className=\"day\">Mon</span>\r\n        <span className=\"day\">Tue</span>\r\n        <span className=\"day\">Wed</span>\r\n        <span className=\"day\">Thu</span>\r\n        <span className=\"day\">Fri</span>\r\n        <span className=\"day\">Sat</span>\r\n      </div>\r\n    );\r\n  };\r\n  return (\r\n    <>\r\n      <section className=\"calendar\">\r\n        <header className=\"header\">\r\n          <div className=\"month-display row\">\r\n     \r\n\r\n            <span className=\"month-label\">{monthTitle}</span>\r\n          </div>\r\n          <DayNames />\r\n        </header>\r\n        {renderWeeks()}\r\n      </section>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default Calendar;\r\n","C:\\Users\\sergio-pieza\\Desktop\\node\\jobsity-calendar\\src\\components\\calendar\\Style.js",["63"],"import React from 'react'\r\nimport styled from 'styled-components'\r\nfunction Style() {\r\n    return (\r\n        <div>\r\n            \r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Style\r\n",["64","65"],"C:\\Users\\sergio-pieza\\Desktop\\node\\jobsity-calendar\\src\\components\\day\\index.js",["66","67"],"C:\\Users\\sergio-pieza\\Desktop\\node\\jobsity-calendar\\src\\components\\week\\index.js",[],"C:\\Users\\sergio-pieza\\Desktop\\node\\jobsity-calendar\\src\\components\\tasklist\\index.js",["68"],"import React, { useContext, useEffect } from 'react';\r\nimport { AppContext } from '../../appContext';\r\nimport './taskList.css'\r\nimport Task from '../task';\r\nfunction TaskList({ dayTitle }) {\r\n  const context = useContext(AppContext);\r\n  const {\r\n    tasks,\r\n    setSelectedTask,\r\n    setShowEdit,\r\n  } = context;\r\n // console.log('tasklist', selectedDay);\r\n\r\n  useEffect(() => {\r\n    setShowEdit(false);\r\n    setSelectedTask(null);\r\n  }, [tasks]);\r\n\r\n  const sortedTasks = tasks[dayTitle]\r\n    ? tasks[dayTitle].sort((a, b) => (a.timeNumber > b.timeNumber ? 1 : -1))\r\n    : [];\r\n  return (\r\n    <section className=\"task-list\">\r\n     \r\n        \r\n          {sortedTasks.map((task) => (\r\n            <Task\r\n              key={task.id}\r\n              task={task}\r\n              setSelectedTask={setSelectedTask}\r\n              setShowEdit={setShowEdit}\r\n              dayTitle={dayTitle}\r\n            />\r\n          ))}\r\n      \r\n     \r\n      \r\n    </section>\r\n  );\r\n}\r\n\r\nexport default TaskList;\r\n","C:\\Users\\sergio-pieza\\Desktop\\node\\jobsity-calendar\\src\\components\\task\\index.js",["69"],"import React ,{useContext,useEffect,useState}from 'react'\r\nimport { AppContext } from '../../appContext';\r\nimport './task.css'\r\nfunction Task({task,setSelectedTask,setShowEdit,dayTitle,selectedTask}) {\r\n    const{ description,city,color,timeNumber,id}=task\r\n    \r\n    const {tasks,setTasks}=useContext(AppContext)\r\n\r\n    const hourString=(Math.floor(timeNumber/100)).toString().padStart(2,'0')\r\n    const minuteString=(timeNumber%100).toString().padStart(2,'0')\r\n    const [forecast,setForecast]=useState(\"loading...\")\r\n    const APIKEY = '05aed15670235acc953ccfcd7dc61442'\r\n    useEffect(() => {\r\n        \r\n      if(selectedTask){\r\n          if(selectedTask===id){\r\n              setShowEdit(true)\r\n          }\r\n      }\r\n    }, [selectedTask,id])\r\n    async function fetchForecast(city) {\r\n       const apiData = await fetch(`https://api.openweathermap.org/data/2.5/weather?q=${city}&APPID=${APIKEY}`)\r\n          .then( res => res.json())\r\n          .then(data => data)\r\n          setForecast( apiData.weather?apiData.weather[0].description:'NotAvailable'\r\n          )\r\n      }\r\n    useEffect(() => {\r\n        fetchForecast(city)\r\n       \r\n    }, [city])\r\n    const prepareToEdit=()=>{\r\n       // console.log(selectedTask)\r\n        setSelectedTask(id)\r\n        setShowEdit(true)\r\n    }\r\n    const deleteTask=()=>{\r\n        let dayTasks=[...tasks[dayTitle]].filter(t=>t.id!==id)\r\n        setTasks({...tasks,[dayTitle]:dayTasks})\r\n    }\r\n    return (\r\n        <div className={`task ${color}`}>\r\n          <div className=\"task-info\">\r\n          <div className=\"task-main\">\r\n                {hourString}:{minuteString} at  {city}\r\n            </div>\r\n            <div className=\"forecast\">\r\n                Forecast:{forecast}\r\n            </div>\r\n            <div className=\"task-description\">\r\n                {description}\r\n            </div>   \r\n            </div>  \r\n            \r\n            <div className=\"btn-wrapper\">\r\n                <button className=\"task-btn edit-btn\"onClick ={()=>prepareToEdit()}>Edit</button>\r\n                <button className=\"task-btn delete-btn\" onClick={()=>deleteTask()}>Delete</button>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Task\r\n","C:\\Users\\sergio-pieza\\Desktop\\node\\jobsity-calendar\\src\\appContext.js",[],"C:\\Users\\sergio-pieza\\Desktop\\node\\jobsity-calendar\\src\\components\\newTask\\index.js",[],"C:\\Users\\sergio-pieza\\Desktop\\node\\jobsity-calendar\\src\\components\\editTask\\index.js",["70","71"],"C:\\Users\\sergio-pieza\\Desktop\\node\\jobsity-calendar\\src\\helpers\\formValidation.js",[],{"ruleId":"72","replacedBy":"73"},{"ruleId":"74","replacedBy":"75"},{"ruleId":"76","severity":1,"message":"77","line":14,"column":18,"nodeType":"78","endLine":14,"endColumn":43},{"ruleId":"79","severity":1,"message":"80","line":2,"column":8,"nodeType":"81","messageId":"82","endLine":2,"endColumn":14},{"ruleId":"72","replacedBy":"83"},{"ruleId":"74","replacedBy":"84"},{"ruleId":"76","severity":1,"message":"85","line":26,"column":5,"nodeType":"86","endLine":26,"endColumn":22,"suggestions":"87"},{"ruleId":"76","severity":1,"message":"88","line":26,"column":6,"nodeType":"89","endLine":26,"endColumn":21},{"ruleId":"76","severity":1,"message":"90","line":17,"column":6,"nodeType":"86","endLine":17,"endColumn":13,"suggestions":"91"},{"ruleId":"76","severity":1,"message":"92","line":20,"column":8,"nodeType":"86","endLine":20,"endColumn":25,"suggestions":"93"},{"ruleId":"76","severity":1,"message":"94","line":40,"column":16,"nodeType":"78","endLine":40,"endColumn":48},{"ruleId":"76","severity":1,"message":"94","line":43,"column":16,"nodeType":"78","endLine":43,"endColumn":48},"no-native-reassign",["95"],"no-negated-in-lhs",["96"],"react-hooks/exhaustive-deps","Assignments to the 'monthTitle' variable from inside React Hook useEffect will be lost after each render. To preserve the value over time, store it in a useRef Hook and keep the mutable value in the '.current' property. Otherwise, you can move this variable directly inside useEffect.","CallExpression","no-unused-vars","'styled' is defined but never used.","Identifier","unusedVar",["95"],["96"],"React Hook useEffect has missing dependencies: 'dayTitle', 'setShowEdit', and 'tasks'. Either include them or remove the dependency array.","ArrayExpression",["97"],"React Hook useEffect has a complex expression in the dependency array. Extract it to a separate variable so it can be statically checked.","MemberExpression","React Hook useEffect has missing dependencies: 'setSelectedTask' and 'setShowEdit'. Either include them or remove the dependency array.",["98"],"React Hook useEffect has a missing dependency: 'setShowEdit'. Either include it or remove the dependency array. If 'setShowEdit' changes too often, find the parent component that defines it and wrap that definition in useCallback.",["99"],"Assignments to the 'dayTitle' variable from inside React Hook useEffect will be lost after each render. To preserve the value over time, store it in a useRef Hook and keep the mutable value in the '.current' property. Otherwise, you can move this variable directly inside useEffect.","no-global-assign","no-unsafe-negation",{"desc":"100","fix":"101"},{"desc":"102","fix":"103"},{"desc":"104","fix":"105"},"Update the dependencies array to be: [dayTitle, setShowEdit, tasks]",{"range":"106","text":"107"},"Update the dependencies array to be: [setSelectedTask, setShowEdit, tasks]",{"range":"108","text":"109"},"Update the dependencies array to be: [selectedTask, id, setShowEdit]",{"range":"110","text":"111"},[712,729],"[dayTitle, setShowEdit, tasks]",[438,445],"[setSelectedTask, setShowEdit, tasks]",[729,746],"[selectedTask, id, setShowEdit]"]